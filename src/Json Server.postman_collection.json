{
	"info": {
		"_postman_id": "746f5bd5-4efd-4666-a8c8-c37809ec11e3",
		"name": "Json Server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
							"\r",
							"\r",
							"pm.test(\"Response Posts id 1\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson[0].id).to.eql(1);\r",
							"  pm.expect(responseJson[0].title).to.eql(\"json-server\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response Posts empty\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  const obj = responseJson[1];\r",
							"  pm.expect(obj.id).to.eql(2);\r",
							"  pm.expect(obj.title).to.not.exist\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/posts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () \r",
							"{ pm.response.to.have.status(201); });\r",
							"\r",
							"pm.test(\"Response Posts exist\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  const obj = responseJson;\r",
							"  pm.expect(obj).to.exist;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"test\",\r\n    \"author\": \"hunter\",\r\n    \"style\": \"blue\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/posts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
							"\r",
							"pm.test(\"Response Posts empty\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  const obj = responseJson;\r",
							"  pm.expect(obj).to.be.empty\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/posts/8",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"posts",
						"8"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () \r",
							"{ pm.response.to.have.status(200); });\r",
							"\r",
							"pm.test(\"Response Posts exist\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  const obj = responseJson;\r",
							"  pm.expect(obj).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"title contains Json-server\",() => {\r",
							"    const responseJson = pm.response.json();\r",
							"    const obj = responseJson.title;\r",
							"    pm.expect(obj).equals(\"json-server\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"json-server\",\r\n    \"author\": \"hunter\",\r\n    \"style\": \"blue\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/posts/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		}
	]
}